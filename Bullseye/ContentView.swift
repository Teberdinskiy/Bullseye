//
//  ContentView.swift
//  Bullseye
//
//  Created by üßîüèªAlikhan Batchaev on 09.11.2019.
//  Copyright ¬© 2019 Alikhan Batchaev. All rights reserved.
//

import SwiftUI

struct ContentView: View {
    
    // Properties
    
    
    // User interface views
    @State var alertIsVisible = false
    @State var sliderValue = 50.0
    @State var target = Int.random(in: 1...100)
    
    var sliderValueRounded: Int {
        Int(self.sliderValue.rounded())
    }
    
    @State var score = 0
    @State var round = 1
    
    // User interface content and layout
    var body: some View {
        VStack {
            Spacer()
            
            // Target row
            HStack {
                Text("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–æ–ª–∑—É–Ω–æ–∫ –∫–∞–∫ –º–æ–∂–Ω–æ –±–ª–∏–∂–µ –∫:")
                Text("\(self.target)")
            }
            
            Spacer()
            
            // Slider row
            HStack {
                Text("1")
                Slider(value: self.$sliderValue, in: 1...100)
                Text("100")
            }
            
            Spacer()
            
            // Button row
            Button(action: {
                print("–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞")
                self.alertIsVisible = true
            }) {
                Text(/*@START_MENU_TOKEN@*/"–£–¥–∞—Ä—å –º–µ–Ω—è!"/*@END_MENU_TOKEN@*/)
                    .fontWeight(.semibold)
                    .foregroundColor(.blue)
            }
            .alert(isPresented: self.$alertIsVisible) {
                Alert(title: Text("–ü—Ä–∏–≤–µ—Ç!ü¶Ñ"),
                      message: Text(self.scoringMessage()),
                      dismissButton: .default(Text("–ü–æ—Ç—Ä—è—Å–∞—é—â–µ!")) {
                        self.score += self.pointsForCurrentRound()
                        self.target = Int.random(in: 1...100)
                        self.round += 1
                    }
                )
            }
            
            Spacer()
            
            // Score row
            HStack {
                Button(action: {}) {
                    Text("–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ")
                }
                Spacer()
                Text("–°—á–µ—Ç:")
                Text("\(self.score)")
                Spacer()
                Text("–†–∞—É–Ω–¥:")
                Text("\(self.round)")
                Spacer()
                Button(action: {}) {
                    Text("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
                }
            }
            .padding(.bottom, 20)
        }
    }
    
    // Methods
    func pointsForCurrentRound() -> Int {
        let maximumScore = 100
        let difference = abs(self.sliderValueRounded - self.target)
        return maximumScore - difference
    }
    
    func scoringMessage() -> String {
        return "–í—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: \(self.sliderValueRounded)\n" +
            "–ò—Å–∫–æ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: \(self.target)\n" +
        "–í–∞—à —Å—á—ë—Ç: \(self.pointsForCurrentRound()) –≤ —ç—Ç–æ–º —Ä–∞—É–Ω–¥–µ"
    }
    
}

// Preview
// =======

struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}
